names(ssd[ , 562:563])
ssd$subject
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, boolean)
sub1 <- subset(ssd, subset = 1)
sub1 <- subset(ssd, subject = 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[ , 1:12])
myedit("showXY.R")
showMe(c(1:6))
mdist <- dist(sub1[ , 1:3])
hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[ , 10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[ , 2])
mdist <- dist(sub1[ 10:12])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[ , -c(562, 563)], centers == 6)
kClust <- kmeans(sub1[ , -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[ , -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1)
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
f <- gl(3, 10)
f
pbeta(0.75, 2, 1)
dbeta(0.75, 2, 1)
qbeta(0.75, 2, 1)
pbeta(c(0.4, 0.5, 0.6), 2, 1)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(x)
mean(temp)
Xmean <- sum(temp["X",] * temp["Prob",])
Xmean
p <- seq(0 , 1, length = 1000)
pbinom(10, size = 1000, prob = 0.5)
pbinom(10, size = 1000, prob = 0.01)
pbinom(100, size = 1000, prob = 0.01)
pbinom(1000, size = 1000, prob = 0.01)
qnorm(120, mean = 100, sd = 15)
qnorm(0.95, mean = 100, sd = 15)
rnorm(120, mean = 100, sd = 15)
qnorm(0.95, mean = 100, sd = 15)
qnorm(0.9, mean = 100, sd = 15)
pnorm(24.27, 29, 4.73)
qnorm(.95, 29, 4.73)
29+4.73+4.73
29*1.645
pnorm(1160, 1020, 50, lower.tail = FALSE)
pnorm(2.8, lower.tail = FALSE)
qnorm(.5, 29, 4.73)
qnorm(.1, 29, 4.73)
29-1.28*4.73
ppois(3, lambda = 3*4)
ppois(0.75, lambda = 2.5)
ppois(3, lambda = 2.5*4)
n <- 10000
means <- cumsum(rnorm(n))/(1:n)
means
n <- 100
means <- cumsum(rnorm(n))/(1:n)
means
cumsum(1:10
)
cumsum(1)
cumsum(1, 2)
cumsum(c(1, 2))
a <- c(1, 4)
b <- c(2, 2)
a/b
sample(0:1, 10, replace = TRUE)
q <- matrix(rnorm(100),10)
View(q)
choose(5,3)
choose(5,4)
choose(5,5)
pbinom(1, 5, prob = .8, lower.tail = FALSE)
pbinom(3, 5, prob = .8, lower.tail = FALSE)
pbinom(6, 5, prob = .8, lower.tail = FALSE)
pbinom(5, 5, prob = .8, lower.tail = FALSE)
pbinom(4, 5, prob = .8, lower.tail = FALSE)
pnorm(qnorm(.53))
qnorm(0.95)
pnorm(70, mean = 80, sd = 10, lower.tail = TRUE)
qnorm(0.95, mean = 1100, sd = 75)
qnorm(0.95, mean = 1100, sd = 7.5)
pbinom(2, 5, prob = 0.5)
pbinom(2, 5, prob = 0.5, lower.tail = FALSE)
pbinom(5, 5, prob = 0.5, lower.tail = FALSE)
pbinom(4, 5, prob = 0.5, lower.tail = FALSE)
pbinom(2, 5, prob = 0.5, lower.tail = TRUE)
pbinom(4, 5, prob = 0.5, lower.tail = TRUE)
4/32
5/32
pbinom(3, 5, prob = 0.5, lower.tail = FALSE)
pnorm(14, mean = 15, sd = 1, lower.tail = TRUE)
pnorm(16, mean = 15, sd = 1, lower.tail = TRUE)
pnorm(16, mean = 15, sd = 1, lower.tail = TRUE) - pnorm(14, mean = 15, sd = 1, lower.tail = TRUE)
1/sqrt(12000)
ppois(10, lambda = 5 * 3)
sessionInfo()
k <- 100
xvals <- seq(-5, 5, length = k)
xvals
qnorm(.95)
pnorm(-1, mean = 0, sd = 1)
pt(0, 15, lower.tail = FALSE)
pt(1, 15, lower.tail = FALSE)
install.packages("UsingR")
library(UsingR)
data(father.son)
x <- father.son$sheight
n <- length(x)
B <- 10000
resamples <- matrix(sample(x, n * B, replace = TRUE), B, n)
resampledMedians <- apply(resamples, 1, median)
head(resampledMedians)
View(resamples)
c <- sample(x, n * B, replace = TRUE)
sample(c(1:100))
v <- sample(c(1:100))
library(datasets)
data(ToothGrowth)
str(ToothGrowth)
head(ToothGrowth)
summary(ToothGrowth)
View(ToothGrowth)
plot(ToothGrowth)
ggplot(aes(x=dose, y=len), data=ToothGrowth) + geom_boxplot(aes(fill=dose)) +
xlab("Dose in miligrams") +ylab("Tooth length")
library(ggplot2)
ggplot(aes(x=dose, y=len), data=ToothGrowth) + geom_boxplot(aes(fill=dose)) +
xlab("Dose in miligrams") +ylab("Tooth length")
ggplot(aes(x=dose, y=len), data=ToothGrowth) + geom_boxplot(aes(fill=dose)) + xlab("Dose in miligrams") +ylab("Tooth length")
ggplot(aes(x=supp, y=len), data=ToothGrowth) + geom_boxplot(aes(fill=supp))+
xlab("Supplement type") +ylab("Tooth length")
range(ToothGrowth$dose)
library(datasets)
data(ToothGrowth)
str(ToothGrowth)
head(ToothGrowth)
summary(ToothGrowth)
library(ggplot2)
ggplot(ToothGrowth, aes(x=factor(dose), y=len)) +
facet_grid(.~supp) +
geom_boxplot(aes(fill = supp), show_guide = FALSE) +
labs(title="Guinea pig tooth length by dosage for each type of supplement",
x="Dose (mg/day)",
y="Tooth Length")
ggplot(ToothGrowth, aes(x=factor(dose), y=len)) +
facet_grid(.~supp) +
geom_boxplot(aes(fill = supp)) +
labs(title="Guinea pig tooth length by dosage for each type of supplement",
x="Dose (mg/day)",
y="Tooth Length")
hypoth1<-t.test(len ~ supp, data = ToothGrowth)
hypoth1$conf.int
hypoth1$p.value
hypoth2<-t.test(len ~ supp, data = subset(ToothGrowth, dose == 0.5))
hypoth2$conf.int
hypoth2$p.value
hypoth3<-t.test(len ~ supp, data = subset(t, dose == 1))
hypoth3$conf.int
hypoth3$p.value
hypoth3<-t.test(len ~ supp, data = subset(ToothGrowth, dose == 1))
hypoth3$conf.int
hypoth3$p.value
hypoth4<-t.test(len ~ supp, data = subset(ToothGrowth, dose == 2))
hypoth4$conf.int
hypoth4$p.value
t.test(len ~ supp, data = subset(ToothGrowth, dose == 2))
t.test(ToothGrowth[supp=="OJ"], ToothGrowth[supp=="VC"], paired = FALSE, var.equal = FALSE)$p.value
len<-ToothGrowth$len
supp<-ToothGrowth$supp
dose<-ToothGrowth$dose
t.test(len[supp=="OJ"], len[supp=="VC"], paired = FALSE, var.equal = FALSE)
t.test(len[dose==2], len[dose==1], paired = FALSE, var.equal = TRUE)
t.test(len[dose==1], len[dose==0.5], paired = FALSE, var.equal = TRUE)
t.test(len[dose==2], len[dose==0.5], paired = FALSE, var.equal = TRUE)
hypoth1<-t.test(len ~ supp, data = ToothGrowth)
hypoth1$conf.int
hypoth1$p.value
hypoth2<-t.test(len ~ supp, data = subset(ToothGrowth, dose == 0.5))
t.test(len ~ supp, data = subset(ToothGrowth, dose == 0.5))
q <- c(1, 2, 3, 4)
q[3]
(-7.8050 - 5.9264) / 2
install.packages("rgl")
install.packages("rglwidget")
install.packages("htmltools")
install.packages("DiagrammeR")
install.packages("metricsgraphics")
install.packages("gplots")
data <- read.csv("dataset.csv", comment.char="#")
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
setwd("D:/Data_science/Solutions collection/Solutions-collection/Heatmaps")
data <- read.csv("dataset.csv", comment.char="#")
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames
my_palette <- colorRampPalette(c("red", "yellow", "green"))(n = 299)
col_breaks = c(seq(-1,0,length=100),  # for red
seq(0,0.7,length=100),              # for yellow
seq(0.7,1,length=100))
png("h1_simple.png",
width = 5*300,        # 5 x 300 pixels
height = 5*300,
res = 300,            # 300 pixels per inch
pointsize = 8)
heatmap.2(mat_data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")            # turn off column clustering
dev.off()
heatmap(mat_data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")            # turn off column clustering
dev.off()
library(gplots)
heatmap(mat_data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")            # turn off column clustering
dev.off()
heatmap.2(mat_data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")            # turn off column clustering
library(gplots)
library(RColorBrewer)
# 1. Reading in data and transform it to matrix format
data <- read.csv("dataset.csv", comment.char="#")
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames                  # assign row names
# 2. Customizing and plotting heatmap
# 2.1 Creates a own color palette from red to green
my_palette <- colorRampPalette(c("red", "yellow", "green"))(n = 299)
# 2.2 Defining the color breaks manually for a "skewed" color transition
col_breaks = c(seq(-1,0,length=100),  # for red
seq(0,0.7,length=100),              # for yellow
seq(0.7,1,length=100))              # for green
# 2.3 Creating a 5 x 5 inch image
png("h1_simple.png",
width = 5*300,        # 5 x 300 pixels
height = 5*300,
res = 300,            # 300 pixels per inch
pointsize = 8)        # smaller font size
heatmap.2(mat_data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")            # turn off column clustering
dev.off()
library(gplots)
library(RColorBrewer)
# 1. Reading in data and transform it to matrix format
data <- read.csv("dataset.csv", comment.char="#")
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames                  # assign row names
# 2. Customizing and plotting heatmap
# 2.1 Creates a own color palette from red to green
my_palette <- colorRampPalette(c("red", "yellow", "green"))(n = 299)
# 2.2 Defining the color breaks manually for a "skewed" color transition
col_breaks = c(seq(-1,0,length=100),  # for red
seq(0,0.7,length=100),              # for yellow
seq(0.7,1,length=100))              # for green
# 2.3 Creating a 5 x 5 inch image
png("h1_simple.png",
width = 5*300,        # 5 x 300 pixels
height = 5*300,
res = 300,            # 300 pixels per inch
pointsize = 8)        # smaller font size
heatmap.2(mat_data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")            # turn off column clustering
library(gplots)
library(RColorBrewer)
# 1. Reading in data and transform it to matrix format
data <- read.csv("dataset.csv", comment.char="#")
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames                  # assign row names
# 2. Customizing and plotting heatmap
# 2.1 Creates a own color palette from red to green
my_palette <- colorRampPalette(c("red", "yellow", "green"))(n = 299)
# 2.2 Defining the color breaks manually for a "skewed" color transition
col_breaks = c(seq(-1,0,length=100),  # for red
seq(0,0.7,length=100),              # for yellow
seq(0.7,1,length=100))              # for green
# 2.3 Creating a 5 x 5 inch image
png("h1_simple.png",
width = 5*300,        # 5 x 300 pixels
height = 5*300,
res = 300,            # 300 pixels per inch
pointsize = 8)        # smaller font si
heatmap.2(mat_data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")            # turn off column clustering
heatmap(mat_data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")
heatmap.2(mat_data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")
heatmap.2(mat_data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")            # turn off column clustering)
dev.off()
library(gplots)
library(RColorBrewer)
# 1. Reading in data and transform it to matrix format
data <- read.csv("dataset.csv", comment.char="#")
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames                  # assign row names
# 2. Customizing and plotting heatmap
# 2.1 Creates a own color palette from red to green
my_palette <- colorRampPalette(c("red", "yellow", "green"))(n = 299)
# 2.2 Defining the color breaks manually for a "skewed" color transition
col_breaks <- c(seq(-5,-2,length=100), seq(-2, 2 length=100), seq(2,5,length=100))
# 2.3 Creating heatmap
heatmap.2(mat_data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")            # turn off column clustering)
heatmap.2(mat_data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")            # turn off column clustering)
dev.off()
c(seq(-5,-2,length=100), seq(-2, 2 length=100), seq(2,5,length=100))
c(seq(-5,-2,length=100), seq(-2, 2, length=100), seq(2,5,length=100))
my_palette <- colorRampPalette(c("red", "yellow", "green"))(n = 299)
c(seq(0,0.033,length=25),seq(0.0331,0.066,length=26),seq(0.0661,0.1,length=25)))
c(seq(0,0.033,length=25),seq(0.0331,0.066,length=26),seq(0.0661,0.1,length=25))
library(gplots)
library(RColorBrewer)
#########################################################
### reading in data and transform it to matrix format
#########################################################
data <- read.csv("dataset.csv", comment.char="#")
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames                  # assign row names
#########################################################
### customizing and plotting heatmap
#########################################################
# creates a own color palette from red to green
my_palette <- colorRampPalette(c("red", "yellow", "green"))(n = 299)
# (optional) defines the color breaks manually for a "skewed" color transition
col_breaks = c(seq(-1,0,length=100),  # for red
seq(0,0.7,length=100),              # for yellow
seq(0.7,1,length=100))              # for green
# creates a 5 x 5 inch image
png("h1_simple.png",
width = 5*300,        # 5 x 300 pixels
height = 5*300,
res = 300,            # 300 pixels per inch
pointsize = 8)        # smaller font size
heatmap.2(mat_data,
cellnote = mat_data,  # same data set for cell labels
main = "Correlation", # heat map title
notecol="black",      # change font color of cell labels to black
density.info="none",  # turns off density plot inside color legend
trace="none",         # turns off trace lines inside the heat map
margins =c(12,9),     # widens margins around plot
col=my_palette,       # use on color palette defined earlier
breaks=col_breaks,    # enable color transition at specified limits
dendrogram="row",     # only draw a row dendrogram
Colv="NA")            # turn off column clustering
dev.off()
library(gplots)
library(RColorBrewer)
# 1. Reading in data and transform it to matrix format
data <- read.csv("dataset.csv", comment.char="#")
rnames <- data[,1]                            # assign labels in column 1 to "rnames"
mat_data <- data.matrix(data[,2:ncol(data)])  # transform column 2-5 into a matrix
rownames(mat_data) <- rnames                  # assign row names
# 2. Customizing and plotting heatmap
# 2.1 Creates a own color palette from red to green
my_palette <- colorRampPalette(c("red", "yellow", "green"))(n = 759)
# 2.2 Defining the color breaks manually for a "skewed" color transition
breaks <- c(seq(0,0.033,length=250),seq(0.0331,0.066,length=260),seq(0.0661,0.1,length=250))
x = matrix(runif(100^2, min=0, max=100), ncol=100)
hm <- heatmap.2(x,
col=my_palette,
breaks=col_breaks,
dendrogram="none",
Colv="NA", Rowv="NA")
x = matrix(runif(100^2, min=0, max=100), ncol=100)
hm <- heatmap.2(x,
col=my_palette,
breaks=breaks,
dendrogram="none",
Colv="NA", Rowv="NA")
rep("#B2E2F8", c(1, 3))
rep("#B2E2F8", 2)
